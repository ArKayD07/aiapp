import streamlit as st
import openai
import requests
from PIL import Image
from io import BytesIO

openai.api_key = "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"

def generate_chat_response(prompt):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}],
        )
        return response['choices'][0]['message']['content'].strip()
    except Exception as e:
        return f"Error: {e}"

def generate_dalle_image(prompt):
    try:
        response = openai.Image.create(prompt=prompt, n=1, size="1024x1024")
        return response['data'][0]['url']
    except openai.error.OpenAIError as e:
        return f"Error: {e.user_message if hasattr(e, 'user_message') else str(e)}"
    except Exception as e:
        return f"Unexpected Error: {str(e)}"

st.title("AI Chatbot & DALL-E Image Generator")
st.sidebar.header("Choose an option")
option = st.sidebar.selectbox("Select functionality:", ["Chatbot", "Image Generator"])

if option == "Chatbot":
    st.header("Chat with AI")
    user_input = st.text_input("Enter your message:", "Hello, AI!")
    if st.button("Send"):
        response = generate_chat_response(user_input)
        st.text_area("AI Response:", response, height=200)

elif option == "Image Generator":
    st.header("Generate an Image with AI")
    image_prompt = st.text_input("Describe the image you want to create:")
    if st.button("Generate Image"):
        image_url = generate_dalle_image(image_prompt)
        if image_url and image_url.startswith("http"):
            try:
                response = requests.get(image_url)
                response.raise_for_status()
                image = Image.open(BytesIO(response.content))
                st.image(image, caption="Generated by DALL-E", use_column_width=True)
            except Exception as e:
                st.error(f"Failed to load the image. Error: {e}")
        else:
            st.error(f"Failed to generate the image. {image_url}")
